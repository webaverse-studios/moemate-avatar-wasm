static const uint8_t fs_material_gl[4159] =
{
	0x46, 0x53, 0x48, 0x08, 0x91, 0xb0, 0x36, 0xc4, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x09, 0x73, // FSH...6........s
	0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // _diffuse........
	0x0a, 0x73, 0x5f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x00, 0x01, 0x00, 0x00, 0x01, // .s_emission.....
	0x00, 0x00, 0x00, 0x0a, 0x73, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x6d, 0x61, 0x70, 0x00, 0x01, // ....s_lightmap..
	0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x73, 0x5f, 0x66, 0x61, 0x63, 0x65, 0x44, 0x61, 0x74, // .......s_faceDat
	0x61, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x09, 0x75, 0x5f, 0x64, 0x69, 0x66, 0x66, // a.........u_diff
	0x75, 0x73, 0x65, 0x02, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x75, 0x5f, 0x65, 0x6d, // use.........u_em
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x02, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x75, // ission.........u
	0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x02, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, // _lightDir.......
	0x00, 0x20, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x65, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x6c, 0x61, // . u_shade_overla
	0x79, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, // y_diffuse_emissi
	0x6f, 0x6e, 0x02, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x17, 0x75, 0x5f, 0x74, 0x65, 0x78, // on.........u_tex
	0x74, 0x75, 0x72, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x53, 0x69, 0x7a, // tureSize_cellSiz
	0x65, 0x32, 0x02, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1f, 0x75, 0x5f, 0x6f, 0x76, 0x65, // e2.........u_ove
	0x72, 0x6c, 0x61, 0x79, 0x4f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, // rlayOpacity_colo
	0x72, 0x43, 0x68, 0x61, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x02, 0x01, 0x00, 0x00, 0x01, 0x00, // rChartType......
	0x00, 0x00, 0x1c, 0x75, 0x5f, 0x6d, 0x65, 0x73, 0x68, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x70, // ...u_meshColor_p
	0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x49, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x02, // rimitiveIdStart.
	0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x13, 0x0f, 0x00, 0x00, 0x69, 0x6e, 0x20, 0x76, 0x65, // ...........in ve
	0x63, 0x33, 0x20, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x3b, 0x0a, 0x63, 0x65, 0x6e, // c3 v_normal;.cen
	0x74, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x69, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, 0x5f, // troid in vec4 v_
	0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // texcoord0;.unifo
	0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x73, 0x5f, 0x64, // rm sampler2D s_d
	0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // iffuse;.uniform 
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x73, 0x5f, 0x65, 0x6d, 0x69, 0x73, // sampler2D s_emis
	0x73, 0x69, 0x6f, 0x6e, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, // sion;.uniform sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x73, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x6d, // mpler2D s_lightm
	0x61, 0x70, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, // ap;.uniform samp
	0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x73, 0x5f, 0x66, 0x61, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, // ler2D s_faceData
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, // ;.uniform vec4 u
	0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // _diffuse;.unifor
	0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, // m vec4 u_emissio
	0x6e, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // n;.uniform vec4 
	0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, // u_lightDir;.unif
	0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x65, // orm vec4 u_shade
	0x5f, 0x6f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, // _overlay_diffuse
	0x5f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // _emission;.unifo
	0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // rm vec4 u_textur
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x32, 0x3b, // eSize_cellSize2;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, // .uniform vec4 u_
	0x6f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x4f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x63, // overlayOpacity_c
	0x6f, 0x6c, 0x6f, 0x72, 0x43, 0x68, 0x61, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x3b, 0x0a, 0x75, // olorChartType;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x65, // niform vec4 u_me
	0x73, 0x68, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x70, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, // shColor_primitiv
	0x65, 0x49, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x3b, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x6d, // eIdStart;.void m
	0x61, 0x69, 0x6e, 0x20, 0x28, 0x29, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // ain ().{.  vec4 
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // color_1;.  vec4 
	0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x65, 0x6d, // emission_2;.  em
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x20, 0x3d, 0x20, 0x75, 0x5f, 0x65, 0x6d, 0x69, // ission_2 = u_emi
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x3b, 0x0a, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x75, 0x69, // ssion;.  if ((ui
	0x6e, 0x74, 0x28, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x65, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x6c, // nt(u_shade_overl
	0x61, 0x79, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6d, 0x69, 0x73, 0x73, // ay_diffuse_emiss
	0x69, 0x6f, 0x6e, 0x2e, 0x77, 0x29, 0x20, 0x3d, 0x3d, 0x20, 0x31, 0x75, 0x29, 0x29, 0x20, 0x7b, // ion.w) == 1u)) {
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2e, // .    emission_2.
	0x78, 0x79, 0x7a, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x20, 0x28, 0x73, // xyz = texture (s
	0x5f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, // _emission, v_tex
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x2e, 0x78, 0x79, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, // coord0.xy).xyz;.
	0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x31, 0x20, 0x3d, //   };.  color_1 =
	0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, //  vec4(0.0, 0.0, 
	0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x69, 0x66, 0x20, // 0.0, 1.0);.  if 
	0x28, 0x28, 0x28, 0x28, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2e, 0x78, // ((((emission_2.x
	0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x65, 0x6d, 0x69, 0x73, //  > 0.0) || (emis
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, // sion_2.y > 0.0))
	0x20, 0x7c, 0x7c, 0x20, 0x28, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2e, //  || (emission_2.
	0x7a, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, // z > 0.0))) {.   
	0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x31, 0x20, 0x3d, 0x20, 0x65, 0x6d, 0x69, 0x73, 0x73, //  color_1 = emiss
	0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, // ion_2;.  } else 
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, // {.    vec4 diffu
	0x73, 0x65, 0x5f, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, // se_3;.    diffus
	0x65, 0x5f, 0x33, 0x20, 0x3d, 0x20, 0x75, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x3b, // e_3 = u_diffuse;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x75, // .    if ((uint(u
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x65, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x5f, 0x64, // _shade_overlay_d
	0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, // iffuse_emission.
	0x7a, 0x29, 0x20, 0x3d, 0x3d, 0x20, 0x31, 0x75, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, // z) == 1u)) {.   
	0x20, 0x20, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x33, 0x20, 0x3d, 0x20, 0x28, //    diffuse_3 = (
	0x75, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x2a, 0x20, 0x74, 0x65, 0x78, 0x74, // u_diffuse * text
	0x75, 0x72, 0x65, 0x20, 0x28, 0x73, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, // ure (s_diffuse, 
	0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x2e, 0x78, 0x79, 0x29, 0x29, // v_texcoord0.xy))
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, // ;.    };.    if 
	0x28, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x65, 0x5f, 0x6f, // ((uint(u_shade_o
	0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, // verlay_diffuse_e
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x78, 0x29, 0x20, 0x3d, 0x3d, 0x20, 0x75, 0x69, // mission.x) == ui
	0x6e, 0x74, 0x28, 0x30, 0x29, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // nt(0))) {.      
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x31, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x3d, 0x20, 0x28, 0x64, // color_1.xyz = (d
	0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x33, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x28, // iffuse_3.xyz * (
	0x28, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x74, 0x20, 0x28, 0x76, // (.        dot (v
	0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2c, 0x20, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, // _normal, u_light
	0x44, 0x69, 0x72, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // Dir.xyz).       
	0x2a, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x29, 0x3b, 0x0a, // * 0.5) + 0.5));.
	0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, //     } else {.   
	0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x75, 0x5f, 0x73, //    if ((uint(u_s
	0x68, 0x61, 0x64, 0x65, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x5f, 0x64, 0x69, 0x66, // hade_overlay_dif
	0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x78, 0x29, // fuse_emission.x)
	0x20, 0x3d, 0x3d, 0x20, 0x31, 0x75, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //  == 1u)) {.     
	0x20, 0x20, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x31, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x3d, //    color_1.xyz =
	0x20, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x33, 0x2e, 0x78, 0x79, 0x7a, 0x20, //  (diffuse_3.xyz 
	0x2a, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x20, 0x28, 0x73, 0x5f, 0x6c, 0x69, 0x67, // * texture (s_lig
	0x68, 0x74, 0x6d, 0x61, 0x70, 0x2c, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, // htmap, v_texcoor
	0x64, 0x30, 0x2e, 0x7a, 0x77, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // d0.zw).xyz);.   
	0x20, 0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, //    } else {.    
	0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x75, 0x5f, //     if ((uint(u_
	0x73, 0x68, 0x61, 0x64, 0x65, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x5f, 0x64, 0x69, // shade_overlay_di
	0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x78, // ffuse_emission.x
	0x29, 0x20, 0x3d, 0x3d, 0x20, 0x32, 0x75, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, // ) == 2u)) {.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x31, 0x2e, 0x78, 0x79, //       color_1.xy
	0x7a, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x20, 0x28, 0x73, 0x5f, 0x6c, // z = texture (s_l
	0x69, 0x67, 0x68, 0x74, 0x6d, 0x61, 0x70, 0x2c, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, // ightmap, v_texco
	0x6f, 0x72, 0x64, 0x30, 0x2e, 0x7a, 0x77, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, // ord0.zw).xyz;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, //       };.      }
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6c, // ;.    };.    col
	0x6f, 0x72, 0x5f, 0x31, 0x2e, 0x77, 0x20, 0x3d, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, // or_1.w = diffuse
	0x5f, 0x33, 0x2e, 0x77, 0x3b, 0x0a, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x69, 0x66, 0x20, // _3.w;.  };.  if 
	0x28, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x65, 0x5f, 0x6f, // ((uint(u_shade_o
	0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, // verlay_diffuse_e
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x79, 0x29, 0x20, 0x21, 0x3d, 0x20, 0x75, 0x69, // mission.y) != ui
	0x6e, 0x74, 0x28, 0x30, 0x29, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, // nt(0))) {.    ve
	0x63, 0x33, 0x20, 0x6f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, // c3 overlayColor_
	0x34, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, // 4;.    vec3 tmpv
	0x61, 0x72, 0x5f, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, // ar_5;.    tmpvar
	0x5f, 0x35, 0x2e, 0x78, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // _5.x = 1.0;.    
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, // tmpvar_5.y = 1.0
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x2e, 0x7a, // ;.    tmpvar_5.z
	0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x76, 0x65, 0x72, //  = 1.0;.    over
	0x6c, 0x61, 0x79, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x34, 0x20, 0x3d, 0x20, 0x74, 0x6d, 0x70, // layColor_4 = tmp
	0x76, 0x61, 0x72, 0x5f, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, // var_5;.    if ((
	0x75, 0x69, 0x6e, 0x74, 0x28, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x65, 0x5f, 0x6f, 0x76, 0x65, // uint(u_shade_ove
	0x72, 0x6c, 0x61, 0x79, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6d, 0x69, // rlay_diffuse_emi
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x79, 0x29, 0x20, 0x3d, 0x3d, 0x20, 0x31, 0x75, 0x29, 0x29, // ssion.y) == 1u))
	0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, //  {.      float s
	0x63, 0x61, 0x6c, 0x65, 0x5f, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x76, // cale_6;.      iv
	0x65, 0x63, 0x32, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x37, 0x3b, 0x0a, 0x20, 0x20, // ec2 tmpvar_7;.  
	0x20, 0x20, 0x20, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, //     uint tmpvar_
	0x38, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, // 8;.      tmpvar_
	0x38, 0x20, 0x3d, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x75, 0x5f, 0x6d, 0x65, 0x73, 0x68, 0x43, // 8 = uint(u_meshC
	0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x70, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x49, 0x64, // olor_primitiveId
	0x53, 0x74, 0x61, 0x72, 0x74, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // Start.w);.      
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x37, 0x2e, 0x78, 0x20, 0x3d, 0x20, 0x69, 0x6e, 0x74, // tmpvar_7.x = int
	0x28, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x6d, 0x6f, 0x64, 0x20, 0x28, 0x28, 0x74, 0x6d, 0x70, // ((uint(mod ((tmp
	0x76, 0x61, 0x72, 0x5f, 0x38, 0x20, 0x2b, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // var_8 + .       
	0x20, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x67, 0x6c, 0x5f, 0x50, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, //  uint(gl_Primiti
	0x76, 0x65, 0x49, 0x44, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x29, 0x2c, 0x20, 0x32, // veID).      ), 2
	0x30, 0x34, 0x38, 0x75, 0x29, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 048u))));.      
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x37, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x69, 0x6e, 0x74, // tmpvar_7.y = int
	0x28, 0x28, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x38, 0x20, 0x2b, 0x20, 0x0a, 0x20, // (((tmpvar_8 + . 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x67, 0x6c, 0x5f, 0x50, //        uint(gl_P
	0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x49, 0x44, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, // rimitiveID).    
	0x20, 0x20, 0x29, 0x20, 0x2f, 0x20, 0x32, 0x30, 0x34, 0x38, 0x75, 0x29, 0x29, 0x3b, 0x0a, 0x20, //   ) / 2048u));. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, //      vec4 tmpvar
	0x5f, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, // _9;.      tmpvar
	0x5f, 0x39, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x65, 0x6c, 0x46, 0x65, 0x74, 0x63, 0x68, 0x20, // _9 = texelFetch 
	0x28, 0x73, 0x5f, 0x66, 0x61, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x2c, 0x20, 0x74, 0x6d, 0x70, // (s_faceData, tmp
	0x76, 0x61, 0x72, 0x5f, 0x37, 0x2c, 0x20, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // var_7, 0);.     
	0x20, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x30, 0x3b, //  uint tmpvar_10;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x30, // .      tmpvar_10
	0x20, 0x3d, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x28, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, //  = uint((v_texco
	0x6f, 0x72, 0x64, 0x30, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, // ord0.z * u_textu
	0x72, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x32, // reSize_cellSize2
	0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x75, 0x69, 0x6e, 0x74, // .x));.      uint
	0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, //  tmpvar_11;.    
	0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x31, 0x20, 0x3d, 0x20, 0x75, 0x69, //   tmpvar_11 = ui
	0x6e, 0x74, 0x28, 0x28, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x2e, // nt((v_texcoord0.
	0x77, 0x20, 0x2a, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x69, 0x7a, // w * u_textureSiz
	0x65, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x32, 0x2e, 0x79, 0x29, 0x29, 0x3b, // e_cellSize2.y));
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, // .      uint tmpv
	0x61, 0x72, 0x5f, 0x31, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, // ar_12;.      tmp
	0x76, 0x61, 0x72, 0x5f, 0x31, 0x32, 0x20, 0x3d, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x75, 0x5f, // var_12 = uint(u_
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x5f, 0x63, 0x65, 0x6c, 0x6c, // textureSize_cell
	0x53, 0x69, 0x7a, 0x65, 0x32, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // Size2.z);.      
	0x73, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x36, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, // scale_6 = 1.0;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, //      if ((tmpvar
	0x5f, 0x31, 0x32, 0x20, 0x3e, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x30, 0x29, 0x29, 0x29, 0x20, // _12 > uint(0))) 
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // {.        float 
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // tmpvar_13;.     
	0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x6d, 0x6f, //    if (((uint(mo
	0x64, 0x20, 0x28, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x30, 0x20, 0x2f, 0x20, // d ((tmpvar_10 / 
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x32, 0x29, 0x2c, 0x20, 0x32, 0x75, 0x29, 0x29, // tmpvar_12), 2u))
	0x29, 0x20, 0x21, 0x3d, 0x20, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x6d, 0x6f, 0x64, 0x20, 0x28, // ) != (uint(mod (
	0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x31, 0x20, 0x2f, 0x20, 0x74, 0x6d, 0x70, // (tmpvar_11 / tmp
	0x76, 0x61, 0x72, 0x5f, 0x31, 0x32, 0x29, 0x2c, 0x20, 0x32, 0x75, 0x29, 0x29, 0x29, 0x29, 0x29, // var_12), 2u)))))
	0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, //  {.          tmp
	0x76, 0x61, 0x72, 0x5f, 0x31, 0x33, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x37, 0x35, 0x3b, 0x0a, 0x20, // var_13 = 0.75;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, //        } else {.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, //           tmpvar
	0x5f, 0x31, 0x33, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // _13 = 1.0;.     
	0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x73, 0x63, //    };.        sc
	0x61, 0x6c, 0x65, 0x5f, 0x36, 0x20, 0x3d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, // ale_6 = tmpvar_1
	0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 3;.      };.    
	0x20, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x34, //   uint tmpvar_14
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, // ;.      tmpvar_1
	0x34, 0x20, 0x3d, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, // 4 = uint((tmpvar
	0x5f, 0x39, 0x2e, 0x77, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, // _9.w + 0.5));.  
	0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x75, //     if (((uint(u
	0x5f, 0x6f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x4f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x5f, // _overlayOpacity_
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x43, 0x68, 0x61, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x79, // colorChartType.y
	0x29, 0x20, 0x3d, 0x3d, 0x20, 0x35, 0x75, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x75, 0x69, 0x6e, // ) == 5u) || (uin
	0x74, 0x28, 0x75, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x4f, 0x70, 0x61, 0x63, 0x69, // t(u_overlayOpaci
	0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x43, 0x68, 0x61, 0x72, 0x74, 0x54, 0x79, 0x70, // ty_colorChartTyp
	0x65, 0x2e, 0x79, 0x29, 0x20, 0x3d, 0x3d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, // e.y) == tmpvar_1
	0x34, 0x29, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6f, // 4))) {.        o
	0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x34, 0x20, 0x3d, 0x20, // verlayColor_4 = 
	0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x39, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, // (tmpvar_9.xyz * 
	0x73, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x36, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // scale_6);.      
	0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // } else {.       
	0x20, 0x6f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x34, 0x20, //  overlayColor_4 
	0x3d, 0x20, 0x28, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x37, 0x35, 0x2c, 0x20, 0x30, 0x2e, // = (vec3(0.75, 0.
	0x37, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x37, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x63, 0x61, 0x6c, // 75, 0.75) * scal
	0x65, 0x5f, 0x36, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, // e_6);.      };. 
	0x20, 0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, //    } else {.    
	0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x75, 0x5f, 0x73, 0x68, //   if ((uint(u_sh
	0x61, 0x64, 0x65, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x5f, 0x64, 0x69, 0x66, 0x66, // ade_overlay_diff
	0x75, 0x73, 0x65, 0x5f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x79, 0x29, 0x20, // use_emission.y) 
	0x3d, 0x3d, 0x20, 0x32, 0x75, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // == 2u)) {.      
	0x20, 0x20, 0x6f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x34, //   overlayColor_4
	0x20, 0x3d, 0x20, 0x75, 0x5f, 0x6d, 0x65, 0x73, 0x68, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x70, //  = u_meshColor_p
	0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x49, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x2e, // rimitiveIdStart.
	0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, // xyz;.      } els
	0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, // e {.        if (
	0x28, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x65, 0x5f, 0x6f, 0x76, // (uint(u_shade_ov
	0x65, 0x72, 0x6c, 0x61, 0x79, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6d, // erlay_diffuse_em
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x79, 0x29, 0x20, 0x3d, 0x3d, 0x20, 0x33, 0x75, 0x29, // ission.y) == 3u)
	0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x76, // ) {.          iv
	0x65, 0x63, 0x32, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x35, 0x3b, 0x0a, 0x20, // ec2 tmpvar_15;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x74, 0x6d, //          uint tm
	0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // pvar_16;.       
	0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x36, 0x20, 0x3d, 0x20, 0x75, //    tmpvar_16 = u
	0x69, 0x6e, 0x74, 0x28, 0x75, 0x5f, 0x6d, 0x65, 0x73, 0x68, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, // int(u_meshColor_
	0x70, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x49, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, // primitiveIdStart
	0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, // .w);.          t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x35, 0x2e, 0x78, 0x20, 0x3d, 0x20, 0x69, 0x6e, 0x74, // mpvar_15.x = int
	0x28, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x6d, 0x6f, 0x64, 0x20, 0x28, 0x28, 0x74, 0x6d, 0x70, // ((uint(mod ((tmp
	0x76, 0x61, 0x72, 0x5f, 0x31, 0x36, 0x20, 0x2b, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // var_16 + .      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x67, 0x6c, 0x5f, 0x50, 0x72, //       uint(gl_Pr
	0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x49, 0x44, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // imitiveID).     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x29, 0x2c, 0x20, 0x32, 0x30, 0x34, 0x38, 0x75, 0x29, 0x29, 0x29, //      ), 2048u)))
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, // );.          tmp
	0x76, 0x61, 0x72, 0x5f, 0x31, 0x35, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x69, 0x6e, 0x74, 0x28, 0x28, // var_15.y = int((
	0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x36, 0x20, 0x2b, 0x20, 0x0a, 0x20, 0x20, // (tmpvar_16 + .  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x67, //           uint(g
	0x6c, 0x5f, 0x50, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x49, 0x44, 0x29, 0x0a, 0x20, // l_PrimitiveID). 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x29, 0x20, 0x2f, 0x20, 0x32, 0x30, 0x34, //          ) / 204
	0x38, 0x75, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 8u));.          
	0x6f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x34, 0x20, 0x3d, // overlayColor_4 =
	0x20, 0x6d, 0x69, 0x78, 0x20, 0x28, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x2c, 0x20, //  mix (vec3(0.1, 
	0x30, 0x2e, 0x39, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, // 0.9, 0.1), vec3(
	0x30, 0x2e, 0x39, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x31, 0x29, 0x2c, // 0.9, 0.1, 0.01),
	0x20, 0x74, 0x65, 0x78, 0x65, 0x6c, 0x46, 0x65, 0x74, 0x63, 0x68, 0x20, 0x28, 0x73, 0x5f, 0x66, //  texelFetch (s_f
	0x61, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x2c, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, // aceData, tmpvar_
	0x31, 0x35, 0x2c, 0x20, 0x30, 0x29, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // 15, 0).x);.     
	0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, //    };.      };. 
	0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, //    };.    color_
	0x31, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, // 1.xyz = ((color_
	0x31, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x75, // 1.xyz * (1.0 - u
	0x5f, 0x6f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x4f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x5f, // _overlayOpacity_
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x43, 0x68, 0x61, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x78, // colorChartType.x
	0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x6f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x43, 0x6f, 0x6c, // )) + (overlayCol
	0x6f, 0x72, 0x5f, 0x34, 0x20, 0x2a, 0x20, 0x75, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, // or_4 * u_overlay
	0x4f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x43, 0x68, 0x61, // Opacity_colorCha
	0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x7d, 0x3b, // rtType.x));.  };
	0x0a, 0x20, 0x20, 0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, // .  gl_FragColor 
	0x3d, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x31, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, 0x00,       // = color_1;.}...
};
